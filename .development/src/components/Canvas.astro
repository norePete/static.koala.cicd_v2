---
import { drawCanvasImage } from './utils/drawCanvasImage.js';
const { tag, image } = Astro.props;
---
<div id="xcmdnahswbechdieofhdnc" data-image_src={image} data-tag={tag} class="m-2 bg-white rounded-lg justify-center items-center flex grow flex-col relative">
    <canvas id={tag} class="absolute top-0 left-0 bg-transparent w-full h-full"></canvas>
    <slot />
</div>

<script is:inline src="/utils/drawCanvasImage.js"></script> <!-- importing from /public/utils/drawCanvasImage.js -->
<script>
    const tag = document.getElementById('xcmdnahswbechdieofhdnc').dataset.tag;
    const image_src = document.getElementById('xcmdnahswbechdieofhdnc').dataset.image_src;
    const img = new Image();
    img.crossOrigin = "anonymous";
    img.src = image_src;
    const canvas = document.getElementById(tag);
    const ctx = canvas.getContext("2d");

    async function sleep() {
      await new Promise(resolve => setTimeout(resolve, 200));
    }

    const rain = async () => {
      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
      const data = imageData.data;
      // get a random set of pixels
      // color them black
      // loop

      for (let i = 0; i < 100; i += 1) {
          for (let i = 0; i < data.length; i += 4) {
            let randomNumber = Math.floor(Math.random() * 100) + 1;
            if (randomNumber < 2) {
                data[i] = 255;
                data[i + 1] = 255;
                data[i + 2] = 255;
            }
            if (randomNumber > 95) {
                data[i] = 0;
                data[i + 1] = 0;
                data[i + 2] = 0;
            }

          }
          await sleep();
          ctx.putImageData(imageData, 0, 0);
          console.log('loop');
      }
    };

    img.onload = () => {
      const offsetX = 0.5;   // center x
      const offsetY = 0.5;   // center y
      drawCanvasImage(ctx, img, 0, 0, canvas.width, canvas.height, offsetX, offsetY);
      // ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);
      // ctx.drawImage(img, 0, 0);
      rain();
    };


    const grayscale = () => {
      ctx.drawImage(img, 0, 0);
      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
      const data = imageData.data;
      for (let i = 0; i < data.length; i += 4) {
        const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;
        data[i] = avg; // red
        data[i + 1] = avg; // green
        data[i + 2] = avg; // blue
      }
      ctx.putImageData(imageData, 0, 0);
    };
</script>




